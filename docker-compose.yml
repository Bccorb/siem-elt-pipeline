version: "3.8"

services:
  minio:
    image: minio/minio
    container_name: minio
    restart: always
    ports:
      - "9000:9000" # API access
      - "9001:9001" # Web UI
    environment:
      MINIO_ROOT_USER: admin
      MINIO_ROOT_PASSWORD: password
    command: server /data --console-address ":9001"
    volumes:
      - minio_data:/data

  api:
    build: ./api
    container_name: api
    restart: always
    depends_on:
      - minio
    ports:
      - "8000:8000"
    environment:
      MINIO_ENDPOINT: http://minio:9000
      MINIO_ACCESS_KEY: admin
      MINIO_SECRET_KEY: password
      DUCKDB_PATH: /app/data/warehouse.db
      UVICORN_RELOAD: true
    volumes:
      - duckdb_data:/app/data
      - ./api:/app
    command:
      ["uvicorn", "main:app", "--host", "0.0.0.0", "--port", "8000", "--reload"]

  prometheus:
    image: prom/prometheus
    container_name: prometheus
    restart: always
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml

  grafana:
    image: grafana/grafana
    container_name: grafana
    restart: always
    depends_on:
      - prometheus
    ports:
      - "3000:3000"
    environment:
      GF_SECURITY_ADMIN_USER: admin
      GF_SECURITY_ADMIN_PASSWORD: password
    volumes:
      - grafana_data:/var/lib/grafana

volumes:
  minio_data:
  duckdb_data:
  grafana_data:
